/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package seguridadswing;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author bruno
 */
public class cifradoArchivos extends javax.swing.JFrame {

    /**
     * Creates new form CifradoSimetrico
     */
    public cifradoArchivos(){
        initComponents();
        actualizar();
       
    }
    private void actualizar(){
        ImageIcon imagen = new ImageIcon("src/seguridadswing/foto.png");
        ImageIcon imagenLabel = new ImageIcon(imagen.getImage().getScaledInstance(this.panelFoto.getWidth(), this.panelFoto.getHeight(), Image.SCALE_DEFAULT));
        this.panelFoto.setIcon(imagenLabel);
        this.getContentPane().setBackground(new Color(37, 42, 53));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        btnCifradoSimetrico = new javax.swing.JButton();
        btnDescifradoArchivoAsimetricamente = new javax.swing.JButton();
        btnCifradoAsimetrico = new javax.swing.JButton();
        btnDescifradoArchivoSimetricamente = new javax.swing.JButton();
        panelFoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCifradoSimetrico.setText("Cifrado archivo simetricamente");
        btnCifradoSimetrico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCifradoSimetricoActionPerformed(evt);
            }
        });

        btnDescifradoArchivoAsimetricamente.setText("Descifrado archivo asimetricamente");
        btnDescifradoArchivoAsimetricamente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescifradoArchivoAsimetricamenteActionPerformed(evt);
            }
        });

        btnCifradoAsimetrico.setText("Cifrado archivo asimetricamente");
        btnCifradoAsimetrico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCifradoAsimetricoActionPerformed(evt);
            }
        });

        btnDescifradoArchivoSimetricamente.setText("Descifrado archivo simetricamente");
        btnDescifradoArchivoSimetricamente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescifradoArchivoSimetricamenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDescifradoArchivoAsimetricamente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDescifradoArchivoSimetricamente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(75, 75, 75)
                .addComponent(panelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCifradoSimetrico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCifradoAsimetrico, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDescifradoArchivoSimetricamente, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCifradoSimetrico, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDescifradoArchivoAsimetricamente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCifradoAsimetrico, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCifradoAsimetricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCifradoAsimetricoActionPerformed
          JFileChooser filechooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
          int return_value = filechooser.showOpenDialog(null);
          if(return_value == JFileChooser.APPROVE_OPTION){
              File selectedFile = filechooser.getSelectedFile();
              /**cifrar**/
          }
    }//GEN-LAST:event_btnCifradoAsimetricoActionPerformed

    private void btnCifradoSimetricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCifradoSimetricoActionPerformed
          
          /**Elegimos el archivo**/
          JFileChooser filechooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
          int return_value = filechooser.showOpenDialog(null);
          if(return_value == JFileChooser.APPROVE_OPTION){
              /**Requerimos contraseña del mismo**/
              String contraseña = JOptionPane.showInputDialog(null);
              File selectedFile = filechooser.getSelectedFile();
              /** ej.: archivo.txt -> archivo.txt.encrypted **/
              String[] patharchivo = selectedFile.getAbsolutePath().split("\\.");
              /**
               * Si ya esta encriptado, se muestra cartel de error, sino se lo encripta.
               */
              if(patharchivo.length == 3 && "encrypted".equals(patharchivo[2])){
                   JOptionPane.showMessageDialog(null, "Ese archivo ya esta encriptado","ERROR",JOptionPane.ERROR_MESSAGE); 
              }
              else{
                  /*
                  Se modifica el path del archivo, agregandole la extension .encrypted
                  */
                    String path = patharchivo[0] + "." + patharchivo[1] + ".encrypted";
                    File archivo_encriptado = new File(path);
                    selectedFile.renameTo(archivo_encriptado);
                    /**
                     * Ciframos con la clase Crypto
                     */
                    Crypto.fileProcessor(Cipher.ENCRYPT_MODE, contraseña, selectedFile, selectedFile);
                    
                    
              }
                           
          }
        
        
    }//GEN-LAST:event_btnCifradoSimetricoActionPerformed

    private void btnDescifradoArchivoSimetricamenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescifradoArchivoSimetricamenteActionPerformed
        /**
         * Elegimos el archivo a descifrar
         */
          JFileChooser filechooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
          int return_value = filechooser.showOpenDialog(null);
          if(return_value == JFileChooser.APPROVE_OPTION){
              File selectedFile = filechooser.getSelectedFile();
              
              String[] path = selectedFile.getAbsolutePath().split("\\.");
              /**
               * Si no esta cifrado entonces se muestra cartel de error, si lo está se lo descifra
               */
              if(path.length == 3 && path[2].equals("encrypted")){
                  /**
                   * Se le requiere la contraseña del archivo al usuario
                   */
                    String contraseña = JOptionPane.showInputDialog(null);
                    String pathname = path[0] + "." + path[1];
                    /**
                     * Se le borra la extension .encrypted al path
                     */
                    File archivo_desencriptado = new File(pathname);
                    selectedFile.renameTo(archivo_desencriptado);
                    /**
                     * Se descifra, si error es porque la contraseña es incorrecta.
                     * CAMBIAR ESTOOOO, DIFERENCIAR EXCEPCIONES Y PONER MUCHOS CARTELES DISTINTOS? ..
                     */
                    boolean res = Crypto.fileProcessor(Cipher.DECRYPT_MODE, contraseña , selectedFile, selectedFile);
                    if(!res){
                        JOptionPane.showMessageDialog(null,"Contraseña incorrecta","Contraseña incorrecta", JOptionPane.ERROR_MESSAGE);
                        
                    }                    
                    
              }
              else{
                  JOptionPane.showMessageDialog(null, "Ese archivo no esta encriptado","ERROR",JOptionPane.ERROR_MESSAGE);
              }
          }
    }//GEN-LAST:event_btnDescifradoArchivoSimetricamenteActionPerformed

    private void btnDescifradoArchivoAsimetricamenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescifradoArchivoAsimetricamenteActionPerformed

         JFileChooser filechooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
          int return_value = filechooser.showOpenDialog(null);
          if(return_value == JFileChooser.APPROVE_OPTION){
              File selectedFile = filechooser.getSelectedFile();
              /**cifrar**/
          }
    }//GEN-LAST:event_btnDescifradoArchivoAsimetricamenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cifradoArchivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cifradoArchivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cifradoArchivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cifradoArchivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                      new cifradoArchivos().setVisible(true);
                              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCifradoAsimetrico;
    private javax.swing.JButton btnCifradoSimetrico;
    private javax.swing.JButton btnDescifradoArchivoAsimetricamente;
    private javax.swing.JButton btnDescifradoArchivoSimetricamente;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel panelFoto;
    // End of variables declaration//GEN-END:variables
}
